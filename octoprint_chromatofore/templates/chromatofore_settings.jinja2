<!-- octoprint_chromatofore/templates/chromatofore_settings.jinja2 -->
<script type="text/html" id="servo-template-row-1">

        <td><div data-bind="text: role"></div></td> 
        <td>    
            <select class="i2c-dropdown-width" 
            data-bind=
                "options: $root.availableServoBoards, value: board,  optionsCaption: 'Choose...'">
            </select>
        </td> 
        <td>
            <select class="channel-dropdown-width" data-bind="options: availableServoChannels, value: channel "></select>
        </td>
        <td><input class="angle-edit-width" type="number", min="0", max="180", data-bind="value: min_angle"></td> 
        <td><input class="angle-edit-width" type="number", min="0", max="180", data-bind="value: max_angle"></td> 
</script>

<script type="text/html" id="servo-template-row-2">
        <td colspan="5">
            <table> 
                <tr><td>Mininum</td><td><input type="range" value="10" min="0" max="180" step=1 class="min-angle"></td></tr>
                <tr><td>Current</td><td><input type="range" value="50" min="0" max="180" step=1 class="angle-value"></td></tr>
                <tr><td>Maximum</td><td><input type="range" value="100" min="0" max="180" step=1 class="max-angle"></td></tr>
            </table>
        </td>
</script>

<div>
    <h4>Chromatofore Filament Changer Settings</h4>
    
    <h5>PCF8574 8 Channel GPIO Board Addresses</h5>

    <div> These boards are used to sense limit switches used for end stops and filament detectors </div>

    <table>
        <thead>
            <tr>
                <th>Address</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: gpioBoards">
            <tr>
                <td>
                    <input type="text" data-bind="textInput: addressInput, event: { change: $parent.updateAddressFromInput }" placeholder="Enter I2C address (in hex)">
                </td>
                <td>
                    <button data-bind="click: $parent.removeGpioBoard">Remove</button>
                    <button data-bind="click: function(){ $parent.validateI2cBoard(address) }">Validate</button>
                </td>
            </tr>
        </tbody>
    </table>

    <button data-bind="click: addGpioBoard">Add GPIO Board</button>

    <h5>PCA9685 16 Channel PWM Driver Board Addresses</h5>
    <div> These boards are used to control hobby servos used to clamp and push filament. </div>

    <table>
        <thead>
            <tr>
                <th>Address</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: servoBoards">
            <tr>
                <td>
                    <input type="text" data-bind="textInput: addressInput, event: { change: $parent.updateAddressFromInput }" placeholder="Enter I2C address (in hex)">
                </td>
                <td>
                    <button data-bind="click: $parent.removeServoBoard">Remove</button>
                    <button data-bind="click: function(){ $parent.validateI2cBoard(address) }">Validate</button>
                </td>
            </tr>
        </tbody>
    </table>

    <button data-bind="click: addServoBoard">Add Servo Board</button>

    <h5>Earwig Filament Actuators</h5>
    <div>The actuators can load and unload filament from the 3d printer.  
        This requires the extruder to be disenaged.  
        Unloading filament requires the hot end to be at temperature.</div>

    <table> 
        <tbody data-bind="foreach: actuators"> 
        <tr>
            <td>Actuator Name</td><td><input type="text" data-bind="textInput: id"></td>
        </tr>
        <tr>
            <td>
                <table> 
                    <thead> 
                        <tr> 
                            <th>Component</th> 
                            <th>Board</th> 
                            <th>Channel</th> 
                            <th>Minimum</th> 
                            <th>Maximum</th> 
                            <th>Actions</th> 
                        </tr> 
                    </thead> 
            
                    <tr data-bind="template: {name: 'servo-template-row-1', data: pusher }"></tr>
                    <tr data-bind="template: {name: 'servo-template-row-2', data: pusher }"></tr>
                    <tr data-bind="template: {name: 'servo-template-row-1', data: moving_clamp }"></tr>
                    <tr data-bind="template: {name: 'servo-template-row-1', data: fixed_clamp }"></tr>

                </table> 
            </td>                           
        </tr>             
        </tbody> 
    </table>    


</div>

<div class="servo-slider" id="slider-distance">
  <div>
    <div class="inverse-left" style="width:70%;"></div>
    <div class="inverse-right" style="width:70%;"></div>
    <div class="range" style="left:30%;right:40%;"></div>
    <span class="thumb" style="left:30%;"></span>
    <span class="thumb" style="left:60%;"></span>
    <div class="sign" style="left:30%;">
      <span id="value">30</span>
    </div>
    <div class="sign" style="left:60%;">
      <span id="value">60</span>
    </div>
  </div>
  <input type="range" tabindex="0" value="30" max="100" min="0" step="1" oninput="
  this.value=Math.min(this.value,this.parentNode.childNodes[5].value-1);
  var value=(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.value)-(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.min);
  var children = this.parentNode.childNodes[1].childNodes;
  children[1].style.width=value+'%';
  children[5].style.left=value+'%';
  children[7].style.left=value+'%';children[11].style.left=value+'%';
  children[11].childNodes[1].innerHTML=this.value;" />

  <input type="range" tabindex="0" value="60" max="100" min="0" step="1" oninput="
  this.value=Math.max(this.value,this.parentNode.childNodes[3].value-(-1));
  var value=(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.value)-(100/(parseInt(this.max)-parseInt(this.min)))*parseInt(this.min);
  var children = this.parentNode.childNodes[1].childNodes;
  children[3].style.width=(100-value)+'%';
  children[5].style.right=(100-value)+'%';
  children[9].style.left=value+'%';children[13].style.left=value+'%';
  children[13].childNodes[1].innerHTML=this.value;" />
</div>

