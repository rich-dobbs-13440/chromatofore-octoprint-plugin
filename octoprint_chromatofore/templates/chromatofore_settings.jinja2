<!-- octoprint_chromatofore/templates/chromatofore_settings.jinja2 -->
<script type="text/html" id="servo-template-row-1">
    <td><div data-bind="text: role"></div></td> 
    <td>    
        <select class="i2c-address"
            data-bind= "options: $root.servoBoards.augmentedBoards(board), value: board,  optionsCaption: 'Choose...'">
        </select>
    </td> 
    <td>
        <select class="i2c-channel" data-bind="options: availableServoChannels, value: channel "></select>
    </td>
    <td><input class="angle-edit-width" type="number", min="0", max="180", data-bind="value: min_angle"></td> 
    <td><input class="angle-edit-width" type="number", min="0", max="180", data-bind="value: max_angle"></td> 
</script>

<script type="text/html" id="servo-template-row-2">
    <td></td>
    <td colspan="4">
        <table class="servo-sliders">
            <!-- Row for the Minimum slider -->
            <tr class="servo-slider">
                <td class="slider-label">Minimum</td>
                <td class="servo-slider">
                    <input type="range" value="10" min="0" max="180" step=1 
                           class="min-angle no-track-color" 
                           data-bind="value: min_angle">
                </td>
                <td class="slider-label"></td> <!-- Empty cell for alignment -->
            </tr>

            <!-- Row for the Current slider -->
            <tr class="servo-slider">
                <td class="slider-label"></td> <!-- Empty cell for alignment -->
                <td class="servo-slider">
                    <input type="range" value="50" min="0" max="180" step=1 
                           class="angle-value no-track-color" 
                           data-bind="value: current_angle">
                    <div class="slider-label current-label">Current</div>
                </td>
                <td class="slider-label"></td> <!-- Empty cell for alignment -->
            </tr>

            <!-- Row for the Maximum slider -->
            <tr class="servo-slider">
                <td class="slider-label"></td> <!-- Empty cell for alignment -->
                <td class="servo-slider">
                    <input type="range" value="100" min="0" max="180" step=1 
                           class="max-angle no-track-color" 
                           data-bind="value: max_angle">
                </td>
                <td class="slider-label">Maximum</td>
            </tr>

            <tr class="response-row">
                <td class="slider-label">Response</td>
                <td colspan="3"><span data-bind="text: apiResponse, css: { 'error-text': isApiError }"></span></td>
            </tr>
        </table>
    </td>
</script>

<script type="text/html" id="limit-switch-template-row-1">
    <td><div data-bind="text: role"></div></td> 
    <td>    
        <select class="i2c-address"
            data-bind= "options:  $root.gpioBoards.augmentedBoards(board), value: board,  optionsCaption: 'Choose...'">
        </select>
    </td> 
    <td>
        <select class="i2c-channel" data-bind="options: availableGpioChannels, value: channel "></select>
    </td>
    <td class="pin-state" data-bind="attr: { 'data-switch-id': switchId }" > 
       <!-- Arrow indicator; CSS class determined by pin state and error -->
       <div class="pin-indicator" data-bind="css: pinCssClass"></div>
       <!-- Display error message if available -->
       <div class="api-response" data-bind="text: apiResponse, css: { 'error-text': isApiError }"></div>
    </td>

</script>    


<script type="text/html" id="i2c-boards-table-template">
    <table>
        <thead>
            <tr>
                <th>Address</th>
                <th>Note</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: $data.boards">
            <tr>
                <td>
                    <input type="text" class="i2c-address"
                        data-bind="textInput: addressInput, event: { change: $parent.updateAddressFromInput }" placeholder="Enter I2C address (in hex)">
                </td>
                <td> 
                    <input type="text" class="i2c-note" data-bind="value: note" placeholder="Explain the purpose of board and range of actuators">
                </td>
                <td>
                    <button data-bind="click: function(){ $root.validateI2cBoard(address) }">Validate</button>
                    <button data-bind="click: function() { board = $data; $parent.removeBoard(board); }"">Remove</button>
                </td>
            </tr>
        </tbody>
    </table>
</script>



<div>
    <h4>Chromatofore Filament Changer Settings</h4>


    
    <h5>PCF8574 8 Channel GPIO Board Addresses</h5>

    <div> These boards are used to sense limit switches used for end stops and filament detectors </div>

    <div data-bind="template: { name: 'i2c-boards-table-template', data: {boards: gpioBoards.items, removeBoard: gpioBoards.removeBoard} }"></div>

    <button data-bind="click: gpioBoards.addBoard">Add GPIO Board</button>



    <h5>PCA9685 16 Channel PWM Driver Board Addresses</h5>
    <div> These boards are used to control hobby servos used to clamp and push filament. </div>

    <div data-bind="template: { name: 'i2c-boards-table-template', data: {boards: servoBoards.items, removeBoard: servoBoards.removeBoard} }"></div>

    <button data-bind="click: servoBoards.addBoard">Add Servo Board</button>




    <h5>Earwig Filament Actuators</h5>
    <div>The actuators can load and unload filament from the 3d printer.  
        This requires the extruder to be disenaged.  
        Unloading filament requires the hot end to be at temperature.</div>

    <table> 
        <thead>
            <tr>
                <th>Actuator</th>
                <th>Actions</th>
            </tr>
        </thead>    
        <tbody data-bind="foreach: actuators"> 

        <tr>
            <td>
                <span class="toggle-triangle" data-bind="click: toggleDetails, css: { collapsed: !detailsVisible() }"></span>
                <input type="text" data-bind="textInput: id" class="actuator-name">
            </td>
            <td>
                <button data-bind="click: $parent.removeActuator">Remove</button>
            </td>
        </tr>
        <tr data-bind="visible: detailsVisible">
            <td colspan="2">
                <table class="actuator-components"> 
                    <thead> 
                        <tr> 
                            <th>Component</th> 
                            <th>Board</th> 
                            <th>Channel</th> 
                            <th>Minimum</th> 
                            <th>Maximum</th> 
                            <th>Actions</th> 
                        </tr> 
                    </thead> 
            
                    <tr data-bind="template: {name: 'servo-template-row-1', data: pusher }"></tr>
                    <tr data-bind="template: {name: 'servo-template-row-2', data: pusher }"></tr>
                    <tr data-bind="template: {name: 'servo-template-row-1', data: moving_clamp }"></tr>
                    <tr data-bind="template: {name: 'servo-template-row-2', data: moving_clamp }"></tr>
                    <tr data-bind="template: {name: 'servo-template-row-1', data: fixed_clamp }"></tr>
                    <tr data-bind="template: {name: 'servo-template-row-2', data: fixed_clamp }"></tr>
                    <tr data-bind="template: {name: 'limit-switch-template-row-1', data: pusher_limit_switch }"></tr>
                    <tr data-bind="template: {name: 'limit-switch-template-row-1', data: filament_sensor }"></tr>

                </table> 
            </td>                           
        </tr>             
        </tbody> 
    </table>   

    <button data-bind="click: addActuator">Add Actuator</button> 

    <div style="display: flex; align-items: center;">
    <label for="refreshRateSelect">Refresh Rate in Seconds</label>
    <select id="refreshRateSelect" style="margin-right: 10px; margin-left: 10px" 
            data-bind="options: refreshRates, optionsText: 'text', optionsValue: 'value', value: selectedRefreshRateInSeconds">
    </select>
    </div>



</div>



