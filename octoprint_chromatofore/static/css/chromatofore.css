
select.i2c-address {
    width: 70px; 
    margin-bottom: 2px;
}

input.i2c-address {
    width: 50px;
}

input.i2c-note {
    width: 300px; 
}

.angle-edit-width {
    width: 40px; 
}

select.i2c-channel{
    width: 60px; 
}

table.actuator-components th {
    text-align: left;
}


table.servo-sliders td.servo-slider {
    position: relative;
}

.servo-sliders div.current-label {
    position: absolute;
    bottom: -20px;  /* Adjust this value to ensure the label sits correctly */
    left: 50%;
    transform: translateX(-50%);  /* This centers the label under the slider */
    text-align: center;
    margin-top: 5px;  /* adjust as needed */    
}


table.servo-sliders td.slider-label {
    width: 70px;
    text-align: center; /* centers the label text */
    vertical-align: middle; /* aligns the text vertically */
}

table.servo-sliders td.servo-slider {
    width: 340px;
}


.servo-sliders input[type="range"] {
    width: 100%;  /* Let the slider take up the full width of its container */
}


td.servo-slider {
    overflow: visible;
}


.servo-slider {
    height: 4px;
    line-height: 4px; /* This will help vertically align content in cells */
}

.response-row {
    height: 50px; /* Adjust as needed */
}



/* Base styles for the no-track-color range input */
.no-track-color::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 12px;            /* Reduced width */
    height: 12px;           /* Reduced height */
    border-radius: 50%;
    cursor: pointer;
    margin-top: -4px;       /* Adjusted margin-top for centering */
}  

.no-track-color::-moz-range-thumb {
    width: 12px;            /* Reduced width */
    height: 12px;           /* Reduced height */
    border-radius: 50%;
    cursor: pointer;
}

.no-track-color::-webkit-slider-runnable-track {
    width: 100%;
    height: 4px;
    cursor: pointer;
    background-color: gray;
    border-radius: 2px;
}

.no-track-color::-moz-range-track {
    width: 100%;
    height: 4px;
    cursor: pointer;
    background-color: gray;
    border-radius: 2px;
}

.no-track-color {
    width: 600px; 
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    margin: 2px 0;
}

/* Separate class for the thumb color */

.min-angle::-webkit-slider-thumb {
    background-color: green;
}

.min-angle::-moz-range-thumb {
    background-color: green;
}

.max-angle::-webkit-slider-thumb {
    background-color: rgb(101, 6, 6); /* Adjusted to distinguish max-angle from min-angle */
}

.max-angle::-moz-range-thumb {
    background-color:  rgb(101, 6, 6)/* Adjusted to distinguish max-angle from min-angle */
}

.angle-value::-webkit-slider-thumb {
    background-color: blue;
}

.angle-value::-moz-range-thumb {
    background-color: blue;
}

.error-text {
    color: red;
}

.toggle-triangle {
    cursor: pointer;
    display: inline-block;
    width: 0;
    height: 0;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 8px solid black; /* This will create an upward pointing triangle */
    transition: transform 0.3s; /* This will animate the toggle */
}


.toggle-triangle.collapsed {
    transform: rotate(-90deg); 
}

.gray-diamond {
    display: inline-block;
    width: 20px;
    height: 20px;
    background-color: gray;
    clip-path: polygon(50% 0%, 0% 50%, 50% 100%, 100% 50%);
}

.green-upward-arrow {
    display: inline-block;
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 15px solid green;
}

.green-downward-arrow {
    display: inline-block;
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 15px solid green;
}

.pin-indicator {
    display: inline-block;
    vertical-align: middle;
    margin-left: 10px;
    margin-right: 10px;
}

td.pin-state div.api-response {
    display: inline-block;
    vertical-align: middle;
    margin-left: 10px;  
    width: 200px;
}

div.item-status {
    margin-left: 5px; 
    margin-right: 5px; 
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    text-align: center;    
}

span.item-found {
    color: green;
}

span.item-not-found {
    color: red;
}


 /* This section implements the layout for the controls for causing actuators to take actions interactively. */

.actuator-hash { grid-area: hash; }
.actuator-nickname { grid-area: nickname; }

.retract-header { grid-area: retract; }
.retract-unload { grid-area: unload; }
.retract-step { grid-area: rstep; }
.retract-step-n { grid-area: rstepn; }
.retract-nsteps { grid-area: rnsteps; }
.retract-speed { grid-area: rspeed; }

.advance-header { grid-area: advance; }
.advance-unload{ grid-area: load; }
.advance-step{ grid-area: astep; }
.advance-step-n { grid-area: astepn; }
.advance-nsteps { grid-area: ansteps; }
.advance-speed { grid-area: aspeed; }

.actuator-actions-sep1 {grid-area: sep1; width: 30px;}
.actuator-actions-sep2 {grid-area: sep2; width: 30px;}

.actuator-actions-grid  {
    display: grid;
    grid-template-areas:
      'nickname nickname nickname nickname nickname hash    hash      hash'
      'retract  unload   sep1     rstep    sep2     rstepn  rnsteps   rspeed'
      'advance  load     sep1     astep    sep2     astepn  ansteps   aspeed';
    gap: 2px;
  }


div.advance-load,
div.retract-unload,
.advance-load button,
.retract-unload button {
    width: 64px; 
}

div.advance-step,
div.retract-step,
.advance-step button,
.retract-step button {
    width: 120px;
}

div.advance-step-n,
div.retract-step-n,
.advance-step-n button,
.retract-step-n button {
    width: 80px;
}


div.advance-nsteps,
div.retract-nsteps,
.advance-nsteps select,
.retract-nsteps select {
    width: 80px;
}


.advance-speed select,
.retract-speed select {
    width: 110px;
}

/* Styling for the filament load-unload dialog */

.filament-move-status-report span.fnsr-label {
    display: inline-block;
    width: 14em;
}

.led {
    display: inline-block;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin-right: 5px;
}

.filament-sensor .led-lit  {
    background-color: yellow;
}

.filament-sensor .led-unlit  {
    background-color: gray;
}

.pusher-limit-switch.led-lit,
.pusher-limit-switch .led-lit{
    background-color: red;
}

.pusher-limit-switch.led-unlit,
.pusher-limit-switch  .led-unlit {
    background-color: gray;
}


#tab_plugin_chromatofore {
    position: relative;  /* Ensure this is relative for modal absolute positioning */
}

.modal-container {
    display: none; 
    position: absolute; /* or fixed if you want it viewport-wide */
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0, 0, 0, 0.2); /* Semi-transparent backdrop */
    z-index: 1000; /* Make sure it's above other content */
}



.modal-content {

    position: absolute;
    background: #fff;    

    background-color: #ffffff;
    border: 1px solid #999999;
    border: 1px solid rgba(0, 0, 0, 0.3);
    -webkit-border-radius: 6px;
    -moz-border-radius: 6px;
    border-radius: 6px;
    -webkit-box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3);
    -moz-box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3);
    box-shadow: 0 3px 7px rgba(0, 0, 0, 0.3);
    -webkit-background-clip: padding-box;
    -moz-background-clip: padding-box;
    background-clip: padding-box;
    outline: none;    
    max-height: 80vh; /* 80% of the viewport height */
    overflow-y: auto; /* add a scrollbar if content overflows */
}

/* Styling for specifying the filament and its characteristics, */

input[type="color"].color-input {
    width: 30px;      /* Adjust based on your design requirements */
    height: 30px;
    padding: 0px;
    border: 1px solid #ccc;  /* Optional, to give a slight border */
}

/* For Webkit browsers like Chrome and Safari */
input[type=color]::-webkit-color-swatch-wrapper {
    padding: 5px;
}

input[type=color]::-webkit-color-swatch {
    border: none;
}


.colored-filament {
    display: inline-block;
    width: 15px;
    height: 15px;
    margin-right: 5px;
    border: 1px solid #aaa;
}

.colored-filament-text {
    margin-left: 5px; /* to add some space between the color box and the text */
}
select.select-filament-dropdown {
    width: 500px;
}


.toggle-button {
    display: inline-block;
    background-color: #ccc; /* Default background color */
    border: 2px solid #999; /* Default border style */
    border-radius: 2px; /* Rounded corners */
    padding: 5px; /* Add padding for better aesthetics */
}
  
.toggle-switch {
    width: 40px;
    height: 20px;
    background-color: #fff; /* Button background color */
    border-radius: 50%;
    transition: background-color 0.2s ease; /* Smooth transition effect */
}
  
  /* Define the pressed state styles */
.toggle-button.active .toggle-switch {
    background-color: #00ff00; /* Change the background color when pressed */
}




